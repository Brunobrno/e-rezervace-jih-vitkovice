services:
  backend:
    container_name: backend-e-trznice
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./backend/.env
    networks:
      - app_network
    depends_on:
      - db
      - redis
    volumes:
      - static-data:/code/collectedstaticfiles
    command: sh -c "
      python manage.py check &&
      python manage.py collectstatic --clear --noinput --verbosity 3 &&
      python manage.py makemigrations --noinput &&
      python manage.py migrate --verbosity 3 --noinput &&
      gunicorn -k uvicorn.workers.UvicornWorker trznice.asgi:application --bind 0.0.0.0:8000"
    expose:
      - "8000"

  frontend:
    build:
      context: ./frontend
    container_name: frontend-e-trznice
    networks:
      - app_network

  redis:
    container_name: redis-e-trznice
    image: redis:alpine
    restart: always
    env_file:
      - ./backend/.env
    environment:
      - REDIS_PASSWORD=${REDIS}
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    networks:
      - app_network

  db:
    image: postgres:15-alpine
    container_name: postgres-e-trznice
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    env_file:
      - ./backend/.env
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  celery:
    container_name: celery-e-trznice
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A trznice worker --loglevel=info
    volumes:
      - ./backend:/code
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - db
      - backend
    networks:
      - app_network

  celery-beat:
    container_name: celery-beat-e-trznice
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A trznice beat --loglevel=info
    volumes:
      - ./backend:/code
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - db
      - backend
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx-e-trznice
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static-data:/code/collectedstaticfiles
    depends_on:
      - backend
      - frontend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  redis-data:
  db-data:
  static-data:
