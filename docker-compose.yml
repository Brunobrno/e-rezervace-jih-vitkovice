services:
  backend:
    container_name: web-vontor-cz
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./backend/.env
    networks:
      - app_network
    depends_on:
      - db
      - redis
    command: sh -c "
      python manage.py check &&
      python manage.py collectstatic --clear --noinput --verbosity 3 &&
      python manage.py makemigrations --noinput &&
      python manage.py migrate --verbosity 3 --noinput &&
      gunicorn -k uvicorn.workers.UvicornWorker trznice.asgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:80"  # Access on http://localhost:3000
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
    networks:
      - app_network



  redis:
    container_name: redis-vontor-cz
    image: redis:alpine
    restart: always
    env_file:
      - ./backend/.env
    environment:
      - REDIS_PASSWORD=${REDIS}
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    networks:
      - app_network

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    env_file:
      - ./backend/.env
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"   # Pokud chceš přistupovat i zvenčí (např. lokálně)
    networks:
      - app_network

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A trznice worker --loglevel=info
    volumes:
      - ./backend:/code
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - db
      - backend
    networks:
      - app_network

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A trznice beat --loglevel=info
    volumes:
      - ./backend:/code
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - db
      - backend
    networks:
      - app_network

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-vontor-cz
    restart: always
    command: tunnel --no-autoupdate run --token eyJhIjoiYmE0ODYwMDBiOWNkMDA0OWIyNTA2NzQyNTYyMjJhNjMiLCJ0IjoiODI4MzFiYzAtODFhZC00NDc5LWI2NTctOGE3YjZkZTE0ZDJiIiwicyI6Ik9EUTNPVEk0TmpZdFltTXhOQzAwTURjMkxXRmlNRFl0WVRCaFlUQTBObU15TURreCJ9
    depends_on:
      - backend
    networks:
      - app_network


networks:
  app_network:
    driver: bridge

volumes:
  redis-data:
  db-data:


#OBNOVA ZÁLOHY (spustin vevnitř containeru databáze)
#docker-compose run --rm db psql -U ${DATABASE_USER} -d ${DATABASE_NAME} -f /backups/<název-zálohy>.sql