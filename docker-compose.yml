services:
  backend:
    container_name: web-vontor-cz
    build: .
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
      AWS_S3_REGION_NAME: ${AWS_S3_REGION_NAME}
      REDIS_PASSWORD: ${REDIS}
      DEBUG: ${DEBUG}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_USER_PASSWORD: ${EMAIL_USER_PASSWORD}
    depends_on:
      - db
      - redis
    command: sh -c "
      python manage.py check &&
      python manage.py collectstatic --clear --noinput --verbosity 3 &&
      python manage.py makemigrations --noinput &&
      python manage.py migrate --verbosity 3 --noinput &&
      gunicorn -k uvicorn.workers.UvicornWorker vontor_cz.asgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"

  frontend:
    context: ./frontend
    container_name: frontend
    environment:
      - REACT_APP_API_URL=http://backend:8000/api  # Django backend URL
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app_network


  redis:
    container_name: redis-vontor-cz
    image: redis:alpine
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS}
    volumes:
      - redis-data:/data
    expose:
      - "6379"

volumes:
  data:
  redis-data:


#OBNOVA ZÁLOHY (spustin vevnitř containeru databáze)
#docker-compose run --rm db psql -U ${DATABASE_USER} -d ${DATABASE_NAME} -f /backups/<název-zálohy>.sql